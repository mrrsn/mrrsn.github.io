import{initControls}from"./ui/controls.js";import{initAudio}from"./audio/context.js";import{startTimer,resetTimer,handleShot,calibrateLatency}from"./timer/core.js";import{setShotCallback}from"./audio/detector.js";import{initCourseChooser}from"./ui/courseChooser.js";import{showStatus}from"./ui/status.js";import{clearParticipantShots}from"./timer/core.js";document.addEventListener("DOMContentLoaded",async()=>{function t(){const t=["startBtn","nextStageBtn"].map(t=>document.getElementById(t)).filter(Boolean);if(t.length<2)return;t.forEach(t=>t.style.height="");const e=t.map(t=>Math.ceil(t.getBoundingClientRect().height)),o=Math.max(...e);t.forEach(t=>t.style.height=o+"px")}console.debug("initAudio: start (non-blocking)"),initAudio().then(()=>console.debug("initAudio: succeeded")).catch(t=>console.warn("initAudio failed (non-blocking):",t)),setShotCallback(handleShot),initControls({onStart:()=>startTimer(),onCalibrate:()=>calibrateLatency(),onNewParticipant:()=>{if(!confirm("Reset course for the next shooter? This will clear shot memory for the entire course and reset to the first stage. Proceed?"))return;try{clearParticipantShots()}catch(t){console.warn("Failed to clear participant shots",t)}try{resetTimer()}catch(t){}let t=!1;try{const e=document.getElementById("courseSelect"),o=document.getElementById("stageSelect");if(e&&e.value&&o){const e=Array.from(o.options).find(t=>t.value);if(e){o.value=e.value;try{o.dispatchEvent(new Event("change",{bubbles:!0}))}catch(t){}t=!0}}}catch(t){console.warn("Failed to reset stage selection for Reset Course",t)}t&&showStatus("Course reset for next shooter â€” stage reset to 1",2e3)}}),initCourseChooser(),setTimeout(t,120),window.addEventListener("resize",()=>{setTimeout(t,30)}),window.addEventListener("orientationchange",()=>{setTimeout(t,200),setTimeout(t,600)}),setTimeout(t,400)});